ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within=Rank, detailed = TRUE, type = 2)
t
t %>% group_by(Set) %>% summarise(n=n())
t %>% group_by(Set, Rank) %>% summarise(n=n())
t %>% group_by(Set, Target) %>% summarise(n=n())
t %>% group_by(Set, Cue) %>% summarise(n=n())
aov(Probability ~ Rank + Set + (Rank * Set), data=t)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within=Rank, detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within=Rank, detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within=Rank, detailed = TRUE, type = 3)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within=Rank, between_covariates = Cue, detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within=Rank, between = Set, detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within = .(Set, Rank), between = Set, detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, within = .(Set, Rank), between = Set, detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within = .(Set, Rank), between = Set, detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within = .(Set, Rank), detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within = .(Cue, Rank), detailed = TRUE, type = 2)
t
ezANOVA(t, dv=Probability, wid=Csid, within = .(Cue, Rank), detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within = .(Cue, Rank), detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within = .(Set, Rank), detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Csid, within_full  = .(Set, Rank), detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within = .(Set, Rank), detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within_full = .(Set, Rank), detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within = .(Set, Rank), detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within = .(Rank), within_full = .(Set),  withindetailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within = .(Rank), within_full = .(Set),  detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within = .(Set, Rank), detailed = TRUE, type = 2)
ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within = .(Set, Rank), detailed = TRUE, type = 2)
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within = .(Set, Rank), detailed = TRUE, type = 2, return_aov = TRUE)
ezlo
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within_full = .(Set, Rank), detailed = TRUE, type = 2, return_aov = TRUE)
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within_full = Rank, within=Set, detailed = TRUE, type = 2, return_aov = TRUE)
ezlo
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within_full = Rank, within=Set, detailed = TRUE, type = 3, return_aov = TRUE)
ezlo
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within_full = Rank, detailed = TRUE, type = 3, return_aov = TRUE)
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within_full = Rank, between=Set, detailed = TRUE, type = 3, return_aov = TRUE)
ezlo
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within = Rank, between=Set, detailed = TRUE, type = 3, return_aov = TRUE)
ezlo
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within = Target, between=Set, detailed = TRUE, type = 3, return_aov = TRUE)
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within = Cue, between=Set, detailed = TRUE, type = 3, return_aov = TRUE)
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within_full = Cue, between=Set, detailed = TRUE, type = 3, return_aov = TRUE)
ezlo
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within_full = Rank, between=Set, detailed = TRUE, type = 3, return_aov = TRUE)
ezlo
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within = Rank, between=Set, detailed = TRUE, type = 3, return_aov = TRUE)
ezlo
ga <- aov(logit(Probability) ~ Set/Cue/Rank, t)
summary(ga)
summary(ga)
gb <- aov(Probability ~ Set/Cue/Rank, t)
gb
summary(gb)
ez.ai
summary(ga)
ga
glht
glht(ga)
omega_sq(ga)
omega_sq(ga$effects)
ga$effects
ga
ga$coefficients
ga$rank
ga$terms
summary.lm(ga)
ga
summary(ga)
ga$assign
ga$df.residual
ga$contrasts
ga$xlevels
ga$model
ga$model$Cue
ga$effects
tt <- ga$effects
class(tt)
tt[0]
tt[1]
tt[2]
tt[6]
omega_sq(ga)
ga
gb = aov(Probability ~ Set/Cue/Rank, data=t)
gb
summary(gb)
aov(Probability ~ Set + Set/Cue/Rank, data=t) %> summary
aov(Probability ~ Set + Set/Cue/Rank, data=t) %>% summary
aov(Probability ~ Set + Rank + Set/Cue/Rank, data=t) %>% summary
gc <- aov(Probability ~ Set + Rank + Set/Cue/Rank, data=t)
gc <- aov(logit(Probability) ~ Set + Rank + Set/Cue/Rank, data=t)
gc
summary(a)
summary(gc)
summary.lm(gc)
ga
gc
summary(gc)
summary(ga)
ez
ez.ai
ezlo
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within=Rank,between=Set)
ezlo
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within=Rank,between=Set, return_aov=TRUE)
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within=Rank,between=Set, return_aov=TRUE, detailed=TRUE
)
ezlo
ezlo$aov %>% summary
ezid <- ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within=Rank,between=Set, return_aov=TRUE, detailed=TRUE
)
ezid
ezid$aov %>% summary
ezlo$aov
ezlo
?ezANOVA
ezlo
ezlo$ANOVA
omega_sq(ezlo$aov)
omega_sq(ezlo$aov$Cue)
omega_sq(ezlo$aov$`Cue:Rank`)
ezid
ezid$ANOVA
ezlo$ANOVA
ezlo$aov
ezlo$aov %>% summary
ezlo <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within=Rank,between=Set, return_aov=TRUE, detailed=TRUE
)
ezlo$ANOVA
.039/297
.039*0.91
ezlo$aov
ezlo$aov %>% summary
ezlo$aov$Cue %>% omega_sq
ezlo$aov$`Cue:Rank`$effects %>% omega_sq
ezlo$aov$`Cue:Rank`$effects
ezlo$aov$`Cue:Rank`
aov(ezlo$aov$`Cue:Rank`_
aov(ezlo$aov$`Cue:Rank`)
anova(ezlo$aov$`Cue:Rank`)
anova(ezlo$aov$`Cue:Rank`) %>% omega_sq
ezlo$aov
ezlo$ANOVA
ezlo$aov %>% summary
SSm = 0.9171785
SSm = 0.0392
DFm=2
MSr = 0.9171785/297
MSr
(SSm-DFm*MSr)/(SSm+SSr+MSr)
SSr = 0.9171785
(SSm-DFm*MSr)/(SSm+SSr+MSr)
SSm = 11.31989760
SSr = 6.4302521
DFm = 5
DFr = 1485
MSr = SSr/DFr
MSr
W2 <- (SSm-DFm*MSr)/(SSm+SSr+MSr)
W2
ezlo$ANOVA
ezlo$aov %>% summary
W2 %>% round(2)
frequenceis
frequencies
frequencies
frequencies %>% mutate(probability = logit(Probability))
bartlett.test(Probability~Label, frequencies)
bartlett.test(logit(Probability)~Label, frequencies)
bartlett.test(log(Probability)~Label, frequencies)
?bartlett
?bartlett.test
levene.test
?levene.test
levene.test(frequencies$Probability)
levene
library(car)
levene.test
levene.test(frequencies$Probability)
leveneTest(frequencies$Probability, frequencies$Label)
frequencies
leveneTest(logit(frequencies$Probability), frequencies$Label)
shapiro.test(frequencies$Probability)
?shapiro.test
frequencies %>% group_by(Label) %>% summarise(W=shapiro.test(Probability))
frequencies %>% group_by(Label) %>% summarise(W=shapiro.test(Probability)$p.value)
frequencies %>% group_by(Label) %>% summarise(W=shapiro.test(logit(Probability))$p.value)
ec
cm
top.4
top.4 <- get_top_frequencies(frequencies, 4) %>% select(tem, umi, onl)
top.4
top.4 %>% filter(onl==NA)
top.4 %>% filter(is.na(onl))
means.4
top.4
top.3
top.3 <- get_top_frequencies(frequencies, 3) %>% select(tem, umi, onl)
top.3 %>% filter(is.na(onl))
top.3 %>% filter(is.na(umi))
top.3 %>% filter(is.na(tem))
top.4 %>% filter(is.na(tem))
top.4 %>% filter(is.na(umi))
top.4 %>% filter(is.na(onl))
frequencies
frequencies %>% filter(Label==onl, Rank==3)
frequencies %>% filter(Label=='onl', Rank==3)
frequencies %>% filter(Label=='onl', Rank==3) %>% group_by(Target) %>% summarise(k=n())
frequencies %>% filter(Label=='onl', Rank==3) %>% group_by(Target) %>% summarise(k=n()) %>% filter(k>2)
top.4 %>% filter(is.na(onl))
top.4 <- get_top_frequencies(frequencies, 4) %>% filter(is.na(onl))
top.4
frequencies %>% filter(Label=='onl', Rank<=3) %>% group_by(Target) %>% summarise(k=n()) %>% filter(k>2)
frequencies %>% filter(Label=='onl', n>1, Rank<=3) %>% group_by(Target, Rank) %>% summarise(k=n())
frequencies %>% filter(Label=='onl', n>1, Rank<=3) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n))
frequencies %>% filter(Label=='onl', n>1, Rank<=3) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k >2)
frequencies %>% filter(Label=='onl', n>1, Rank<=3) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k > 3)
frequencies %>% filter(Label=='onl', n>1, Rank==3) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k > 3)
frequencies %>% filter(Label=='onl', n>1, Rank==3) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k > 2)
frequencies %>% filter(Label=='onl', Rank==3) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k > 2)
frequencies %>% filter(Label=='onl', Rank==3) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k > 2)
frequencies %>% filter(Label=='onl', Rank<=3) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k > 2)
frequencies %>% filter(Label=='onl', Rank<=3) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k > 4)
frequencies %>% filter(Label=='onl', Target=='gıcırtı') %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k > 4)
frequencies %>% filter(Label=='onl', Target=='gıcırtı') %>% group_by(Target, Rank)
frequencies %>% filter(Label=='onl', Target=='gıcırtı')
setsizes
setsizes <- frequencies %>% filter(n > 1, Assoc != '?') %>% group_by(Label, Target) %>% summarise(SetSize=n()) %>% arrange(Target, Label)
setsizes %>% filter(Target=='gıcırtı')
setsizes %>% filter(Target=='avuç')
frequencies %>% filter(Label=='onl', Rank<=6) %>% group_by(Target, Rank) %>% summarise(k=n(), z=sum(n)) %>% filter(k > 4)
top.5 <- get_top_frequencies(frequencies, 5) %>% filter(is.na(onl))
get_top_frequencies(frequencies, 5) %>% filter(is.na(onl))
get_top_frequencies(frequencies, 5) %>% filter(is.na(onl))
library(tidyr)
get_top_frequencies(frequencies, 5) %>% gather(Label, Value, -Target)
get_top_frequencies(frequencies, 5) %>% gather(Label, Value, -Target) %>% filter(is.na(Value))
get_top_frequencies(frequencies, 5) %>% gather(Label, Value, -Target) %>% filter(is.na(Value)) %>% group_by(Target) %>% summarise(n=n())
get_top_frequencies(frequencies, 4) %>% gather(Label, Value, -Target) %>% filter(is.na(Value)) %>% group_by(Target) %>% summarise(n=n())
get_top_frequencies(frequencies, 4) %>% gather(Label, Value, -Target) %>% filter(is.na(Value)) %>% group_by(Label, Target) %>% summarise(n=n())
get_top_frequencies(frequencies, 4) %>% gather(Label, Value, -Target) %>% filter(is.na(Value)) %>% group_by(Label) %>% summarise(n=n())
get_top_frequencies(frequencies, 5) %>% gather(Label, Value, -Target) %>% filter(is.na(Value)) %>% group_by(Label) %>% summarise(n=n())
get_top_frequencies(frequencies, 6) %>% gather(Label, Value, -Target) %>% filter(is.na(Value)) %>% group_by(Label) %>% summarise(n=n())
t
t %>% filter(Probability==NA)
t %>% filter(is.na(Probability))
t
t %>% filter(Set=="Online", Rank==4)
t %>% filter(Set=="Online", Rank==6)
t
t %>% filter(Set=="Online", Cue=='avuç')
po <- frequencies %>%
filter(Rank <= 6) %>%
group_by(Label, Target) %>%
filter(row_number() <= 6) %>%
mutate(RowNo = row_number()) %>%
ungroup() %>%
arrange(Target, Label, desc(Probability))
po
po %>% filter(Label=="onl", Target=='avuç')
po %>% filter(Label=="onl", Target=='gıcırtı')
po <- frequencies %>%
filter(Rank <= 6, n > 2, Assoc != '?') %>%
group_by(Label, Target) %>%
filter(row_number() <= 6) %>%
mutate(RowNo = row_number()) %>%
ungroup() %>%
arrange(Target, Label, desc(Probability))
po
po %>% filter(RowNo==6)
po %>% filter(Rank==6)
po %>% filter(RowNo==6)
po %>% filter(Rank==6)
po %>% filter(Rank==5)
po %>% filter(Rank==4)
po %>% filter(Rank==3)
po %>% filter(Rank==2)
po %>% filter(Rank==1)
po
po %>% filter(Rank==1)
po %>% filter(Rank==1, RowNo==1)
po %>% filter(Rank==1, RowNo==1) %>% group_by(Target) %>% summarise(K=n()) %>% filter(K != 3)
po %>% filter(Target=='pomat')
ezlo
omega_manual <- function(SSm, SSr, DFm, MSr) {
(SSm-DFm*MSr)/(SSm+SSr+MSr)
}
omega_manual(0.05451682, 6.4302521, 10, (6.4302521/1485))
6.4302521/1485
summary(ezlo$aov)
omega_manual(0.05451682, 6.4302521, 10, 0.0043)
ezid <- ezANOVA(data=as.data.frame(t), dv=Probability, wid=Cue, within=Rank,between=Set, return_aov=TRUE, detailed=TRUE
)
ezid
ezlo$aov %>% summary
omega_manual(0.05451682, 6.4302521, 10, 0.0043)
0.001774803 %>% round(2)
0.001774803 %>% round(3)
ezid
t
ezlo
ezlow <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within=Rank,between=Set, return_aov=TRUE, detailed=TRUE
)
logit(0.5)
logit(0.2)
ezlow
ezlow$ANOVA
ezlow$ANOVA == ezhi$ANOVA
ezlow$ANOVA == ezid$ANOVA
ezlow$aov
ezlow$aov
vv <- aov(logit(Probability) ~ Set, t)
vv
summary(vv)
vv
t
vv <- aov(logit(Probability) ~ Set, Csid)
vv <- aov(logit(Probability) ~ Csid, t)
vv
vv <- aov(logit(Probability) ~ Set, t)
vv <- aov(logit(Probability) ~ Set/Cue, t)
vv
summary(vv)
vv <- aov(logit(Probability) ~ Set/Cue/Rank, t)
vv
summary(vv)
vv <- aov(logit(Probability) ~ Set + Set/Cue, t)
vv
vv <- aov(logit(Probability) ~ Set + Cue, t)
vv
vv <- aov(logit(Probability) ~ Set * Cue, t)
vv
vv <- aov(logit(Probability) ~ Set * Cue, t) %>% summary
vv
vv <- aov(logit(Probability) ~ Set +  Set * Cue, t) %>% summary
vv
vv <- aov(logit(Probability) ~ Set +  Set/Cue, t) %>% summary
vv
vv <- aov(logit(Probability) ~ Set/Cue, t) %>% summary
vv
aov(Probability ~ Set, t) %>% summary
aov(Probability ~ Csid, t) %>% summary
aov(Probability ~ Set, t) %>% summary
aov(logit(Probability) ~ Set, t) %>% summary
aov(logit(Probability) ~ Set, t) %>% omega_sq
aov(Probability ~ Set, t) %>% omega_sq
ezlow <- ezANOVA(data=as.data.frame(t), dv=logit(Probability), within=(Rank, Cue),between=Set, return_aov=TRUE, detailed=TRUE)
ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within=(Rank, Set), return_aov=FALSE)
ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within=(Rank, Set), return_aov=FALSE)
ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Cue, within=.(Rank, Set), return_aov=FALSE)
ezANOVA(data=as.data.frame(t), dv=logit(Probability), within=.(Rank, Set), return_aov=FALSE)
ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Csid, within=.(Rank, Set), return_aov=FALSE)
ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Csid, within=.(Rank), return_aov=FALSE)
ezANOVA(data=as.data.frame(t), dv=logit(Probability), wid=Csid, within=.(Rank), between = Set,  return_aov=FALSE)
source('~/.active-rstudio-document', echo=TRUE)
news
frequencies
fni <- frequencies %>% filter(n > 1, Assoc != '?')
fni %>% group_by(Target) %>% distinct(Assoc)
fni %>% group_by(Target) %>% distinct(Assoc) %>% group_by(Label) %>% summarise(Count=n())
distincts <- fni %>% group_by(Target) %>% distinct(Assoc)
distincts <- fni %>% group_by(Target) %>% distinct(Assoc) %>% group_by(Label)
distincts <- fni %>% group_by(Target) %>% distinct(Assoc)
distincts %>% group_by(Label)
distincts %>% group_by(Target)
distincts
distincts %>% group_by(Target) %>% summarise(Count=n())
distincts %>% group_by(Target, Label) %>% summarise(Count=n())
rr <- distincts %>% group_by(Target, Label) %>% summarise(Count=n())
rr
aov(Count~Target/Label)
aov(Count~Target/Label, rr)
rr
rr %>% spread(Label)
rr %>% spread(Label, Count)
rr %>% spread(Label, Count, fill = 0)
nt <- rr %>% spread(Label, Count, fill = 0)
nt %>% gather(Label, Value, -Target)
jj <- nt %>% gather(Label, Value, -Target)
aov(Value ~ Label/Target)
aov(Value ~ Label/Target, nt)
nt
aov(Value ~ Label/Target, jj)
aov(Value ~ Label/Target, jj) %>% summary
aov(log(Value) ~ Label/Target, jj) %>% summary
aov(log(Value+1) ~ Label/Target, jj) %>% summary
aov(Value ~ Label/Target, jj) %>% summary
aov(Value ~ Label*Target, jj) %>% summary
aov(Value ~ Label+Target, jj) %>% summary
aov(Value ~ Label+Target, jj) %>% omega_sq
ezANOVA(data = as.data.frame(jj), dv = Value, between = Set, within = Label)
ezANOVA(data = as.data.frame(jj), dv = Value, wid = Target, within = Label)
ezANOVA(data = as.data.frame(jj), dv = Value, wid = Target, within = Label, return_aov=TRUE)
aov(Value ~ Label)
aov(Value ~ Label, jj)
aov(Value ~ Label, jj) %>% summary
aov(Value ~ Label*Target, jj) %>% summary
aov(Value ~ Label+Target, jj) %>% summary
aov(Value ~ Label, jj) %>% TukeyHSD
jj
aov(Value ~ Target, jj)
aov(Value ~ Target, jj) %>% summary
aov(Value ~ Target*Label, jj) %>% summary
aov(Value ~ Target*Label, jj)
oo <- aov(Value ~ Target*Label, jj)
oo$effects
o
summary.lm(oo)
aov(Value ~ Target*Label, jj) %>% summary
aov(Value ~ Label*Target, jj) %>% summary
aov(Value ~ Label/Target, jj) %>% summary
aov(Value ~ Label+Target, jj) %>% summary
aov(Value ~ Label, jj) %>% summary
aov(Value ~ Target, jj) %>% summary
aov(Value ~ Target, jj)
aov(Value ~ Label)
aov(Value ~ Label, jj)
aov(Value ~ Label, jj) %>% summary
aov(log(Value) ~ Label, jj) %>% summary
aov(log(Value+1) ~ Label, jj) %>% summary
aov(Value ~ Label, jj) %>% summary
aov(Value ~ Label, jj) %>% omega_sq
aov(Value ~ Label, jj) %>% omega_sq %>% round(2)
nj <- aov(Value ~ Label, jj)
library(multcomp)
glht(nj)
glht(nj, linfct=mcp('Tukey')))
glht(nj, linfct=mcp('Tukey'))
glht(nj, linfct=mcp(Label='Tukey'))
et <- glht(nj, linfct=mcp(Label='Tukey'))
et.ci <- confint(et)
et.ci
et
summary(et)
ggplot(et.ci, aes(lhs, estimate)) + geom_linerange(aes(ymin = lwr, ymax=upr), data=et.ci) + geom_point(aes(size=p), data=summary(ss.tuk)) + geom_point(shape=4, size=6) + geom_errorbar(aes(ymin=lwr, ymax=upr), width=0.25, data=et.ci) + scale_size(trans="reverse") + geom_hline(linetype="dashed") +  theme_bw() + xlab("Data Sets") + ylab("Estimated mean difference") +
theme(plot.title=element_text(face="bold", size=14), panel.grid.major=element_blank(), panel.grid.minor=element_blank()) + ggtitle('Multiple comparisons of mean set size') + coord_flip() + theme(aspect.ratio=240/640)
ggplot(et.ci, aes(lhs, estimate)) + geom_linerange(aes(ymin = lwr, ymax=upr), data=et.ci) + geom_point(aes(size=p), data=summary(et)) + geom_point(shape=4, size=6) + geom_errorbar(aes(ymin=lwr, ymax=upr), width=0.25, data=et.ci) + scale_size(trans="reverse") + geom_hline(linetype="dashed") +  theme_bw() + xlab("Data Sets") + ylab("Estimated mean difference") +
theme(plot.title=element_text(face="bold", size=14), panel.grid.major=element_blank(), panel.grid.minor=element_blank()) + ggtitle('Multiple comparisons of mean set size') + coord_flip() + theme(aspect.ratio=240/640)
nj
jj
jj <- rename(Cue=Target, Set=Label, N=Value)
jj <- jj %>% rename(Cue=Target, Set=Label, N=Value)
nj <- aov(Value ~ Label, jj)
nj <- aov(N ~ Set, jj)
njtk <- glht(nj, linfct=mcp(Label='Tukey'))
njtk <- glht(nj, linfct=mcp(Set='Tukey'))
njci <- confint(njtk)
ggplot(njci, aes(lhs, estimate)) + geom_linerange(aes(ymin = lwr, ymax=upr), data=njci) + geom_point(aes(size=p), data=summary(njtk)) + geom_point(shape=4, size=6) + geom_errorbar(aes(ymin=lwr, ymax=upr), width=0.25, data=njci) + scale_size(trans="reverse") + geom_hline(linetype="dashed") +  theme_bw() + xlab("Data Sets") + ylab("Estimated mean difference") +
theme(plot.title=element_text(face="bold", size=14), panel.grid.major=element_blank(), panel.grid.minor=element_blank()) + ggtitle('Multiple comparisons of mean distinct associates') + coord_flip() + theme(aspect.ratio=240/640)
nj
jj
levels(nj$Set) <- list(`TS`="tem", `Lab`="umi", `Online`="onl")
nj
levels(jj$Set) <- list(`TS`="tem", `Lab`="umi", `Online`="onl")
nj <- aov(N ~ Set, jj)
njtk <- glht(nj, linfct=mcp(Set='Tukey'))
njci <- confint(njtk)
ggplot(njci, aes(lhs, estimate)) + geom_linerange(aes(ymin = lwr, ymax=upr), data=njci) + geom_point(aes(size=p), data=summary(njtk)) + geom_point(shape=4, size=6) + geom_errorbar(aes(ymin=lwr, ymax=upr), width=0.25, data=njci) + scale_size(trans="reverse") + geom_hline(linetype="dashed") +  theme_bw() + xlab("Data Sets") + ylab("Estimated mean difference") +
theme(plot.title=element_text(face="bold", size=14), panel.grid.major=element_blank(), panel.grid.minor=element_blank()) + ggtitle('Multiple comparisons of mean distinct associates') + coord_flip() + theme(aspect.ratio=240/640)
jj
cor(jj)
jj %>% spread(Set, N)
jj %>% spread(Set, N) %>% select(-Cue) %>% corr
jj %>% spread(Set, N) %>% %>% corr
gg <- jj %>% spread(Set, N)
gg
cor
gg
gg %>% select(TS, Lab, Online) %>% corr
tio,2
top.2
gg
corr(select(gg, TS, Lab, Online))
corr(select(gg, TS, Lab))
corr(select(gg, TS, Online))
top.2 <- get_top_frequencies(frequencies, 2) %>% select(tem, umi, onl)
top.2
ko <- gg %>% select(TS, Lab, Online)
ko
cor(ko)
.19+.32+29
29.51/23
29.51/2
29.51/3
.19+.32+.29
0.8.3
0.8/3
oko <- cor(ko)
maxlim = 1.0
pd = position_dodge(0.15)
oko
oko[1]
oko[1,1]
oko[2,1]
c(oko[2,1], oko[2,3])
c(oko[2,1], oko[2,3], oko[3,1])
mean(c(oko[2,1], oko[2,3], oko[3,1]))
sd(c(oko[2,1], oko[2,3], oko[3,1]))
rs <_ c(oko[2,1], oko[2,3], oko[3,1])
rs <- c(oko[2,1], oko[2,3], oko[3,1])
t.test(rs)
t.test(rs) %>% summary
t.test(rs)
nj
nj%>% summary
njtk
njtk %>% summary
t.test(rs) %>% summary
t.test(rs)
