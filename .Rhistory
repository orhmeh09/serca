mutate(RowNo = row_number()) %>%
ungroup() %>%
arrange(Target, Label, desc(Probability)) %>%
select(RowNo, Label, Target, Probability)
source('~/code/serca/serca.R', echo=TRUE)
top6 <- frequencies %>%
filter(Rank <= 6) %>%
group_by(Label, Target) %>%
filter(row_number() <= 6) %>%
mutate(RowNo = row_number()) %>%
ungroup() %>%
arrange(Target, Label, desc(Probability)) %>%
select(RowNo, Label, Target, Probability)
top6 %>% select(Rank=RowNo, Dataset=Label, Target, Strength=Probability)
t <- top6 %>% select(Rank=RowNo, Dataset=Label, Target, Strength=Probability)
a <- aov(Strength ~ Rank + Error(Dataset/Target), t)
t
a
summary(a)
a <- aov(Strength ~ Rank + Error(Dataset/Target/Rank), t)
summary(a)
a <- aov(Strength ~ Rank*Dataset + Error(Dataset/Target/Rank), t)
a
a <- aov(Strength ~ Rank*Dataset + Error(Target/Rank), t)
a
summary(a)
a <- aov(Strength ~ Rank*Dataset + Error(Target), t)
summary(a)
a <- aov(Strength ~ Rank + Dataset + Error(Target), t)
summary(a)
a <- aov(Strength ~ Target/Rank, t)
a
summary(a)
a <- aov(Strength ~ Dataset/Target/Rank, t)
a
summary(a)
library(lme4)
lme(Strength ~ Dataset, random=~1|Target, data=t)
lmer(Strength ~ Dataset, random=~1|Target, data=t)
library(nlme)
lmer(Strength ~ Dataset, random=~1|Target, data=t)
lme(Strength ~ Dataset, random=~1|Target, data=t)
anova(lme(Strength ~ Dataset, random=~1|Target, data=t))
anova(lme(Strength ~ Dataset, random=~1|Target/Rank, data=t))
anova(lme(Strength ~ Rank*Dataset, random=~1|Target/Rank, data=t))
anova(lme(Strength ~ Ran + *Dataset, random=~1|Target/Rank, data=t))
anova(lme(Strength ~ Ran + Dataset, random=~1|Target/Rank, data=t))
anova(lme(Strength ~ Rank + Dataset, random=~1|Target/Rank, data=t))
anova(lme(Strength ~ Rank + Dataset, random=~1|Dataset/Target/Rank, data=t))
anova(lme(Strength ~ Rank + Dataset, random=~1|Dataset/Target, data=t))
anova(lme(Strength ~ Rank, random=~1|Dataset/Target, data=t))
anova(lme(Strength ~ Rank, random=~1|Target, data=t))
summary(aov(Strength ~ Dataset/Target/Rank, data=t))
q <- aov(Strength ~ Dataset/Target/Rank, data=t)
plot(q)
q <- aov(Strength ~ Rank * Dataset + Error(Dataset/Target/Rank), data=t)
q
summary(q)
q <- aov(Strength ~ Rank * Dataset + Error(Target/Rank), data=t)
q
summary(q)
q <- lmer(Strength ~ Rank * Dataset + (1|Dataset:Target))
q <- lmer(Strength ~ Rank * Dataset + (1|Dataset:Target), data=t)
q
anova(t)
aov(t)
aov(q)
anova(q)
q <- lmer(Strength ~ Rank + (1|Dataset:Target), data=t)
anova(q)
q <- lmer(Strength ~ Rank * Dataset + (1|Target:Rank), data=t)
anova(q)
a <- aov(Strength ~ Rank * Dataset + Error(Target/Dataset), t)
summary(a)
a <- aov(Strength ~ Rank + Error(Target/Dataset), t)
summary(a)
summary(aov(Strength ~ Rank + Error(Target), t)
)
summary(aov(Strength ~ Rank + Dataset + Error(Target), t))
summary(aov(Strength ~ Rank * Dataset + Error(Target), t))
summary(aov(Strength ~ Rank * Dataset + Error(Target/Rank), t))
summary(aov(Strength ~ Rank * Dataset + Error(Rank/Target), t))
summary(aov(Strength ~ Rank*Dataset + Error(Target/Rank) + Dataset, data=t))
summary(aov(Strength ~ Rank*Dataset + Error(Target/Rank), data=t))
summary(aov(Strength ~ Rank + Dataset + Error(Target/Rank), data=t))
summary(aov(Strength ~ Rank + Dataset + Error(Rank/Target), data=t))
summary(aov(Strength ~ Rank * Dataset + Error(Rank/Target), data=t))
summary(aov(Strength ~ Rank * Dataset + Error(Rank/Target) + Dataset, data=t))
summary(aov(Strength ~ Error(Target), data=t))
summary(aov(Strength ~ Rank + Error(Target/Rank), data=t))
summary(aov(Strength ~ Rank*Dataset + Error(Dataset/Target/Rank), data=t))
summary(aov(Strength ~ Rank*Dataset + Error(Target/Rank), data=t))
summary(aov(Strength ~ Rank + Error(Target/Rank), data=t))
summary(anova(lmer(Strength ~ Rank + (1 | Target:Rank), data=t)))
anova(lmer(Strength ~ Rank + (1 | Target:Rank), data=t))
anova(lmer(Strength ~ Rank * Dataset + (1 | Target:Rank), data=t))
anova(lmer(Strength ~ Rank * Dataset + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ Rank + Dataset + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ Rank () Dataset + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ Rank + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ Rank + (1 | Target:Rank), data=t))
lmer(Strength ~ Rank + (1 | Target:Rank), data=t)
lmer(Strength ~ Rank * Dataset + (1 | Target:Rank), data=t)
anova(lmer(Strength ~ Rank * Dataset + (1 | Target:Rank), data=t))
anova(lmer(Strength ~ Rank  + Dataset + (1 | Target:Rank), data=t))
anova(lmer(Strength ~ Dataset + (1 | Target:Rank), data=t))
anova(lmer(Strength ~ Dataset + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ Dataset + (1 | Dataset:Target), data=t))
anova(lmer(Strength ~ Dataset + Rank + (1 | Dataset:Target), data=t))
anova(lmer(Strength ~ Rank + (1 | Dataset:Target), data=t))
top6 <- frequencies %>%
filter(Rank <= 6) %>%
group_by(Label, Target) %>%
filter(row_number() <= 6) %>%
mutate(RowNo = row_number()) %>%
ungroup() %>%
arrange(Target, Label, desc(Probability)) %>%
select(RowNo, Label, Target, Probability)
aov(Probability ~ RowNo * Label + Error(Target/RowNo), top6
)
aov(Probability ~ RowNo + Label + Error(Target/RowNo), top6)
anova(lmer(Strength ~ Dataset + 1 + Rank + (1 | Dataset:Target), data=t))
anova(lmer(Strength ~ Dataset + 1 + Rank + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ 1 + Dataset + 1 + Rank + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ 1 + Dataset + Rank + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ Dataset * Rank + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ 1 + Dataset * Rank + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ 1 | Dataset * Rank + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ 1 + Dataset * Rank + 1 + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ 1 + Dataset * Rank + 1 + 1 + (1 | Dataset:Target:Rank), data=t))
anova(lmer(Strength ~ 1 + Dataset * Rank + 1 + 1 + (1 | Target:Rank), data=t))
anova(lmer(Strength ~ 1 + Dataset * Rank + 1 + (1 | Target:Rank), data=t))
anova(lmer(Strength ~ 1 + Dataset * Rank + (1 | Target:Rank), data=t))
anova(lmer(Strength ~ Dataset * Rank + (1 | Target:Rank), data=t))
anova(lmer(Strength ~ 1 + (1 | Dataset:Target) + (1| Target:Rank), data=t))
anova(lmer(Strength ~ Rank + 1 + (1 | Dataset:Target) + (1| Target:Rank), data=t))
anova(lmer(Strength ~ Rank + (1 | Dataset:Target) + (1| Target:Rank), data=t))
anova(lmer(Strength ~ Rank * (1 | Dataset:Target) + (1| Target:Rank), data=t))
anova(lmer(Strength ~ Rank + (1 | Dataset:Target:Rank) + (1| Target:Rank), data=t))
anova(lmer(Strength ~ Rank + (1 | Dataset:Target:Rank) + (1| Dataset:Target:Rank), data=t))
summary(aov(Strength ~ (Rank*Dataset) + Error(Target/(Rank*Dataset)), data=t))
res <- lm(Strength ~ Dataset + Target/Rank, data = t)
res
summary(anova(res))
anova(res)
plot(res)
plot(coef(res))
res <- lm(Strength ~ Dataset + (Dataset/Target/Rank), data = t)
anova(res)
formula(re)
formula(res)
res <- lm(Strength ~ Dataset + (Dataset/Target), data = t)
res
anova(res)
res <- lm(Strength ~ Dataset + (Dataset/Target/Rank), data = t)
res
anova(res)
res <- lm(Strength ~ (Dataset/Target/Rank), data = t)
res
anova(res)
res <- lm(Strength ~ Dataset + (Dataset/Target/Rank), data = t)
anova(res)
res <- lm(Strength ~ Dataset*Rank + (Dataset/Target/Rank), data = t)
anova(res)
top6
res <- lm(Probability ~ Label*RowNo + (Label/Target/RowNo), data = top6)
anova(res)
anova(lm(Probability ~ Label*RowNo + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + (Target/RowNo), data = top6))
top6
anova(lm(Probability ~ RowNo + Target + (Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + Target + (Label/Target/RowNo), data = top6))
top6$RowNo <- factor(top6$RowNo)
top6$Label <- factor(top6$Label)
top6$Target <- factor(top6$Target)
anova(lm(Probability ~ RowNo + Target + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo*Label + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo*Label + (Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + (Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + (Label/Target), data = top6))
anova(lm(Probability ~ RowNo + Target + (Label/Target), data = top6))
anova(lm(Probability ~ RowNo * Target + (Label/Target), data = top6))
anova(lm(Probability ~ RowNo * Target + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo * Target + (Target/RowNo), data = top6))
anova(lm(Probability ~ Dataset + (Target/RowNo), data = top6))
anova(lm(Probability ~ Label + (Target/RowNo), data = top6))
plot(lm(Probability ~ Label + (Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + Label + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo * Label + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo * Label + (Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo * Label * Target + (Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo * Label + (Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo * Label + (Target/RowNo), data = top6))
m <-  lm(Probability ~ RowNo * Label + (Target/RowNo), data = top6)
m
m <-  lm(Probability ~ RowNo * Label + (Target/RowNo) + (Label/Target), data = top6)
anova(m)
summary(m)
plot(m)
m <-  lm(Probability ~ RowNo + (Target/RowNo) + (Label/Target), data = top6)
anova(m)
plot(m)
plot(coef(m)
)
m <-  lm(Probability ~ RowNo + (Label/Target/RowNo), data = top6)
m
m <-  lm(Probability ~ Label + (Target/RowNo), data = top6)
m
plot(m)
anova(m)
formula(m)
m <-  lm(Probability ~ Label * (Target/RowNo), data = top6)
anova(m)
m <-  lm(Probability ~ RowNo * Label + (Target/RowNo), data = top6)
anova(m)
library(TukeyHSD)
library(multcomp)
TukeyHSD(m)
TukeyHSD(aov(m)
)
TukeyHSD(aov(m), "Label")
TukeyHSD(aov(m), "Label:RowNo")
TukeyHSD(aov(m), "RowNo:Label")
TukeyHSD(aov(m), "Target:Label")
TukeyHSD(aov(m), "Label:Target")
model.tables(m)
model.tables(aov(m))
summary(m)
anova(lm(Probability ~ Label + (Target/RowNo), data = top6))
anova(lm(Probability ~ Label + (Label/Target/RowNo), data = top6))
anova(lm(Probability ~ Label + (Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo + (Target/RowNo), data = top6))
anova(lm(Probability ~ RowNo*Label + (Target/RowNo), data = top6))
a <- aov(Probability ~ RowNo * Label + Error(Target/RowNo), top6)
summary(a)
model.tables(a)
a
TukeyHSD(a, "Label")
setsizes
top6 <- do_anova_top6(frequencies)
setsizes
setsizes <- tbl_df(read.delim('data/setsizes.txt', stringsAsFactors = FALSE, fileEncoding="UTF-8"))
setsizes
library(tidyr)
setsizes %>% spread(Label, SetSize)
setsizes %>% spread(Label)
setsizes %>% spread(Label, Totals)
setsizes %>% spread(Label + Target, SetSize)
?spread
setsizes %>% select(Target, SetSize, Label) %>% spread(Label, SetSize)
ss <- setsizes %>% select(Target, SetSize, Label) %>% spread(Label, SetSize)
cor(ss)
cor(ss %>% select(onl, tem, umi))
cor(log2(ss))
cor(log2(ss$onl), log2(ss$tem))
cor(ss$onl, ss$tem)
cor(ss$onl, ss$tem, ss$umi)
cor(ss %>% select(onl, tem, umi) %>% log2)
cor(ss %>% select(onl, tem, umi))
cor(ss %>% select(onl, tem, umi) %>% log2)
ss
print(ss.cor)
ss.cor
cor(ss %>% select(umi, onl, tem))
help(ggpairs)
library(GGally)
help(ggpairs)
frequencies
frequencies %>% group_by(Label, Target) %>% select(Assoc)
frequencies %>% group_by(Target) %>% select(Assoc)
frequencies %>% group_by(Target)
f.tem <- frequencies %>% filter(Label=="tem")
f.umi <- frequencies %>% filter(Label=="umi")
f.onl <- frequencies %>% filter(Label=="onl")
f.umi %>% group_by(Label) %>% anti_join(f.tem, by="Assoc")
rbind(f.umi, f.onl) %>% group_by(Label) %>% anti_join(f.tem, by="Assoc")
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc")
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% arrange(Target, n)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% arrange(Target, desc(n)
)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% arrange(Target, desc(Probability)
)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(Target, desc(Probability))
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability))
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% spread(Label, Probability)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Target, Assoc, n, Probability) %>% spread(Label, Probability)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Target, Assoc, n, Probability)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability) %>% spread(Label, Probability)
?spread
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability) %>% spread(c(Label), c(Probability, n))
library(reshape2)
?dcast
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability) %>% dcast(Target + Assoc ~ Probability)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability) %>% dcast(Target + Assoc ~ value.var = Probability)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability) %>% dcast(Target + Assoc,  value.var = Probability)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability) %>% dcast(Assoc, Probability)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability) %>% dcast(Label)
rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability)
q <- rbind(f.umi, f.onl) %>% filter(n > 1) %>% filter(Assoc != '?') %>% group_by(Label) %>% anti_join(f.tem, by="Assoc") %>% ungroup() %>% arrange(desc(Probability)) %>% select(Label, Target, Assoc, n, Probability)
dcast(q, Target + Assoc)
library(reshape2)
dcast(q, Target + Assoc)
dcast(q, Target ~ Assoc)
dcast(q, Target ~ Assoc ~ Probability)
dcast(q, Assoc ~ Probability)
dcast(q, Target + Assoc ~ Probability)
dcast(q, Target + Assoc ~ Probability + n)
dcast(q, Target + Assoc ~ Probability)
head(dcast(q, Target + Assoc ~ Probability))
head(dcast(q, Target + Assoc ~ Label))
head(dcast(q, Target + Assoc ~ Label, value.var=n))
head(dcast(q, Target + Assoc ~ Label))
q
head(dcast(q, Target + Assoc ~ Label, margins=c('n')))
head(dcast(q, Target + Assoc ~ Label, margins=c('n', 'Probability')))
head(dcast(q, Target + Assoc ~ Label, value.var='n')
)
head(dcast(q, Target + Assoc ~ Label + ~n)
)
head(dcast(q, Target + Assoc ~ Label + ~n))
head(dcast(q, Target + Assoc ~ Label ~ n))
head(dcast(q, Target + Assoc ~ Label ~ n))
head(dcast(q, Target + Assoc + n ~ Label))
head(dcast(q, Target + Assoc ~ Label))
head(dcast(q, Target + Assoc ~ Label, value.var = c(Probability, n)))
head(dcast(q, Target + Assoc ~ Label, value.var = c('Probability', 'n')))
head(dcast(q, Target + Assoc ~ Label, value.var = c('Probability' + 'n')))
head(dcast(q, Target + Assoc ~ Label, value.var = c('Probability', 'n')))
head(dcast(q, Target + Assoc ~ Label, value.var = cbind(Probability, n)))
head(dcast(q, Target + Assoc ~ Label, value.var = cbind(Probability, n)))
head(dcast(q, Target + Assoc ~ Label, value.var = Probability)))
head(dcast(q, Target + Assoc ~ Label, value.var = Probability))
head(dcast(q, Target + Assoc ~ Label))
head(dcast(q, Target + Assoc ~ Label, value.var = 'Probability'))
head(dcast(q, Target + Assoc ~ Label, value.var = 'b'))
head(dcast(q, Target + Assoc ~ Label, value.var = 'n'))
head(dcast(q, Target + Assoc ~ Label, value.var = c('Probability', 'n'))
)
head(dcast(q, Target + Assoc ~ Label, value.var = cbind('Probability', 'n')))
head(dcast(q, Target + Assoc ~ Label, value.var = c('n', 'Probability')))
dcast(q, Target + Assoc ~ Label, value.var = c('n', 'Probability'))
melt(q)
head(melt(q))
melt(q, id=c('n'))
head(melt(q, id=c('n')))
head(melt(q, id=c('Target', 'Assoc')))
head(melt(q, id=c('Target', 'Assoc', 'Label')))
melt(q, id=c('Target', 'Assoc', 'Label')) %>% dcast(Target + Assoc ~ Label)
melt(q, id=c('Target', 'Assoc', 'Label')) %>% dcast(Target + Assoc ~ Label, value.var = variable)
melt(q, id=c('Target', 'Assoc', 'Label')) %>% dcast(Target + Assoc ~ Label, value.var = value)
melt(q, id=c('Target', 'Assoc', 'Label'))
head(melt(q, id=c('Target', 'Assoc', 'Label')))
melt(q, id=c('Target', 'Assoc', 'Label')) %>% dcast(Target + Assoc ~ Label, value.var = c('variable'))
melt(q, id=c('Target', 'Assoc', 'Label')) %>% dcast(Target + Assoc ~ Label, value.var = c('value'))
melt(q, id=c('Target', 'Assoc', 'Label')) %>% dcast(Target + Assoc ~ Label, value.var = c('variable', value'))
melt(q, id=c('Target', 'Assoc', 'Label')) %>% dcast(Target + Assoc ~ Label, value.var = c('variable', 'value'))
melt(q, id=c('Target', 'Assoc', 'Label')) %>% dcast(Target + Assoc ~ Label, value.var = c('variable', 'value'))
q
q %>% dcast(Target + Assoc ~ Label)
head(q %>% dcast(Target + Assoc ~ Label))
head(q %>% dcast(Target + Assoc ~ Label, value.var=Probability))
head(q %>% dcast(Target + Assoc ~ Label, value.var=c('Probability')))
head(q %>% dcast(Target + Assoc ~ Label, value.var=c('Probability', 'n')))
head(q %>% dcast(Target + Assoc ~ Label, value.var=c('Probability')))
q %>% spread(Target, Label)
q %>% spread(Label, Assoc)
q %>% spread(Label, Probability)
a <- q %>% spread(Label, Probability)
b <- q %>% spread(Label, n)
b
a
head(q %>% dcast(Target + Assoc ~ Label))
a <- tbl_df(q %>% dcast(Target + Assoc ~ Label))
a
q
z <- melt(q, measure.vars = c('Probability', 'n'))
z
head(z)
tbl_df(q %>% melt(measure.vars = c('Probability', 'n')) %>% dcast(Target + Assoc ~ Label))
tbl_df(q %>% melt(measure.vars = c('Probability', 'n')) %>% dcast(Target + Assoc ~ Label, fun.aggregate=sum))
q %>% spread(Target, Label)
q %>% spread(Assoc, Label)
q
q %>% select(Label, Target, Assoc, Probability)
q %>% select(Label, Target, Assoc, Probability) %>% spread(Label, Probability)
m.ps <- q %>% select(Label, Target, Assoc, Probability) %>% spread(Label, Probability)
m.ns <- q%>% select(Label, Target, Assoc, n) %>% spread(Label, n)
semi_join(m.ps, m.ns)
left_join(m.ps, m.ns)
inner_join(m.ps, m.ns)
?spread
m.ps
m.ps %>% select(onl.p = onl, umi.p = umi)
m.ps %>% select(Target, Assoc, onl.p = onl, umi.p = umi)
m.ps <- m.ps %>% select(Target, Assoc, onl.p = onl, umi.p = umi)
m.ns <- m.ns %>% select(Target, Assoc, onl.n = onl, umi.n = umi)
inner_join(m.ps, m.ns)
inner_join(m.ps, m.ns) %>% select(Target, Assoc, onl.p, onl.n, umi.p, umi.n) %>% arrange(Target, Assoc)
q
?filter
q %>% filter(Label=='onl' & n > 1)
q %>% filter(Label=='onl' && n > 1)
q %>% filter(Label=='onl' && n > 5)
q %>% filter(Label=='onl' & n > 5)
q %>% filter(Label=='onl' && n > 5)
View(q %>% filter(Label=='onl' && n > 5))
View(q %>% filter(Label=='onl' & n > 5))
m.ns
m.ns %>% rename(Word=Assoc)
source('~/code/serca/serca.R')
frequencies
frequencies <- tbl_df(read.delim('data/frequencies.txt', stringsAsFactors = FALSE, fileEncoding="UTF-8"))
do_new_words(frequencies)
debugSource('~/code/serca/serca.R')
do_new_words(frequencies)
do_new_words(frequencies)
source('~/code/serca/serca.R')
do_new_words(frequencies)
help("anti_join")
?spread
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
do_new_words(frequencies)
news <- do_new_words(frequencies)
write.table(news, 'data/new_words.txt' quote=FALSE, sep='\t', row.names=FALSE, fileEncoding='UTF-8')
write.table(news, 'data/new_words.txt', quote=FALSE, sep='\t', row.names=FALSE, fileEncoding='UTF-8')
library(DT)
news
news <- tbl_df(read.delim('data/new_words.txt', stringsAsFactors = FALSE, fileEncoding="UTF-8"))
news
summary(news)
summary.table(news)
Summary(news)
Summary.data.frame(news)
summary(news)
nrow(news)
news %>%
()
news %>% summarise(NT <- unique(Target))
unique(Target)
unique(news%Target)
unique(news$Target)
nrow(unique(news$Target))
length(unique(news$Target))
print("Length:", 4)
print("Length:%d", 4)
print("Length:%d", )
?print
news
news %>% group_by(Target) %>% summarise(Q=n())
news %>% group_by(Target) %>% summarise(Q=mean(n()))
news %>% group_by(Target) %>% summarise(mean(n))
news %>% group_by(Target) %>% summarise(n())
news %>% group_by(Target) %>% summarise(n=n())
news %>% group_by(Target) %>% summarise(n=n()) %>% mean(n)
news %>% group_by(Target) %>% summarise(n=n()) %>% summarise(mean(n))
news %>% group_by(Target) %>% summarise(n=n()) %>% summarise(sum(n))
table(1,2)
table('a', 'b')
?table
table('a', c('b', 1))
table(c('a', 2), c('b', 1))
frequencies
frequencies <- tbl_df(frequencies)
library(dplyr)
frequencies <- tbl_df(frequencies)
frequencies
frequencies %>% filter(Rank <= 3) %>% select(Target, Assoc)
frequencies %>% filter(Rank <= 3) %>% select(Target, Assoc) %>% distinct()
frequencies %>% filter(Rank <= 3) %>% select(Target, Assoc) %>% distinct() %>% arrange(Target, Assoc)
frequencies %>% filter(Rank <= 1) %>% select(Target, Assoc) %>% distinct() %>% arrange(Target, Assoc)
frequencies %>% filter(Rank <= 3) %>% select(Target, Assoc) %>% distinct() %>% arrange(Target, Assoc)
top3 <- frequencies %>% filter(Rank <= 3) %>% select(Target, Assoc) %>% distinct() %>% arrange(Target, Assoc)
write.table(top3, 'data/top3_allsets.txt', sep='\t', quote = F, row.names = F, fileEncoding = 'UTF-8')
top1 <- frequencies %>% filter(Rank <= 1) %>% select(Target, Assoc) %>% distinct() %>% arrange(Target, Assoc)
library(dplyr)
top1 <- frequencies %>% filter(Rank <= 1) %>% select(Target, Assoc) %>% distinct() %>% arrange(Target, Assoc)
write.table(top1, 'data/top1_allsets.txt', sep='\t', quote = F, row.names = F, fileEncoding = 'UTF-8')
top1 <- frequencies %>% filter(Rank <= 1 & Assoc != '?') %>% select(Target, Assoc) %>% distinct() %>% arrange(Target, Assoc)
write.table(top1, 'data/top1_allsets.txt', sep='\t', quote = F, row.names = F, fileEncoding = 'UTF-8')
frequencies
a <- frequencies %>% select(Target, Assoc) %>% distinct()
a
a %>% filter(Assoc %in% Target)
b <- a %>% filter(Assoc %in% Target)
View(b)
b <- a %>% filter(Assoc %in% Target) %>% distinct()
a
a %>% filter(Target=='tabanca')
a %>% filter(Target=='zaman')
a %>% filter(Target=='televizyon')
b %>% rename(Target=Assoc, Assoc=Target)
complete_pairs <- b %>% rename(Target=Assoc, Assoc=Target)
write.table(complete_pairs, 'data/complete_pairs.txt', sep='\t', quote = F, row.names = F, fileEncoding = 'UTF-8')
write.table(b, 'data/complete_pairs.txt', sep='\t', quote = F, row.names = F, fileEncoding = 'UTF-8')
b
b %>% distinct()
source('~/code/serca/serca.R')
source('~/.active-rstudio-document', echo=TRUE)
library(dcast2)
library(reshape2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/code/serca/serca.R')
library(recast2)
library('rescast')
library('rescast2')
library()
