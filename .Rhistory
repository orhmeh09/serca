aov(Value ~ Label+Target, jj) %>% summary
aov(Value ~ Label, jj) %>% TukeyHSD
jj
aov(Value ~ Target, jj)
aov(Value ~ Target, jj) %>% summary
aov(Value ~ Target*Label, jj) %>% summary
aov(Value ~ Target*Label, jj)
oo <- aov(Value ~ Target*Label, jj)
oo$effects
o
summary.lm(oo)
aov(Value ~ Target*Label, jj) %>% summary
aov(Value ~ Label*Target, jj) %>% summary
aov(Value ~ Label/Target, jj) %>% summary
aov(Value ~ Label+Target, jj) %>% summary
aov(Value ~ Label, jj) %>% summary
aov(Value ~ Target, jj) %>% summary
aov(Value ~ Target, jj)
aov(Value ~ Label)
aov(Value ~ Label, jj)
aov(Value ~ Label, jj) %>% summary
aov(log(Value) ~ Label, jj) %>% summary
aov(log(Value+1) ~ Label, jj) %>% summary
aov(Value ~ Label, jj) %>% summary
aov(Value ~ Label, jj) %>% omega_sq
aov(Value ~ Label, jj) %>% omega_sq %>% round(2)
nj <- aov(Value ~ Label, jj)
library(multcomp)
glht(nj)
glht(nj, linfct=mcp('Tukey')))
glht(nj, linfct=mcp('Tukey'))
glht(nj, linfct=mcp(Label='Tukey'))
et <- glht(nj, linfct=mcp(Label='Tukey'))
et.ci <- confint(et)
et.ci
et
summary(et)
ggplot(et.ci, aes(lhs, estimate)) + geom_linerange(aes(ymin = lwr, ymax=upr), data=et.ci) + geom_point(aes(size=p), data=summary(ss.tuk)) + geom_point(shape=4, size=6) + geom_errorbar(aes(ymin=lwr, ymax=upr), width=0.25, data=et.ci) + scale_size(trans="reverse") + geom_hline(linetype="dashed") +  theme_bw() + xlab("Data Sets") + ylab("Estimated mean difference") +
theme(plot.title=element_text(face="bold", size=14), panel.grid.major=element_blank(), panel.grid.minor=element_blank()) + ggtitle('Multiple comparisons of mean set size') + coord_flip() + theme(aspect.ratio=240/640)
ggplot(et.ci, aes(lhs, estimate)) + geom_linerange(aes(ymin = lwr, ymax=upr), data=et.ci) + geom_point(aes(size=p), data=summary(et)) + geom_point(shape=4, size=6) + geom_errorbar(aes(ymin=lwr, ymax=upr), width=0.25, data=et.ci) + scale_size(trans="reverse") + geom_hline(linetype="dashed") +  theme_bw() + xlab("Data Sets") + ylab("Estimated mean difference") +
theme(plot.title=element_text(face="bold", size=14), panel.grid.major=element_blank(), panel.grid.minor=element_blank()) + ggtitle('Multiple comparisons of mean set size') + coord_flip() + theme(aspect.ratio=240/640)
nj
jj
jj <- rename(Cue=Target, Set=Label, N=Value)
jj <- jj %>% rename(Cue=Target, Set=Label, N=Value)
nj <- aov(Value ~ Label, jj)
nj <- aov(N ~ Set, jj)
njtk <- glht(nj, linfct=mcp(Label='Tukey'))
njtk <- glht(nj, linfct=mcp(Set='Tukey'))
njci <- confint(njtk)
ggplot(njci, aes(lhs, estimate)) + geom_linerange(aes(ymin = lwr, ymax=upr), data=njci) + geom_point(aes(size=p), data=summary(njtk)) + geom_point(shape=4, size=6) + geom_errorbar(aes(ymin=lwr, ymax=upr), width=0.25, data=njci) + scale_size(trans="reverse") + geom_hline(linetype="dashed") +  theme_bw() + xlab("Data Sets") + ylab("Estimated mean difference") +
theme(plot.title=element_text(face="bold", size=14), panel.grid.major=element_blank(), panel.grid.minor=element_blank()) + ggtitle('Multiple comparisons of mean distinct associates') + coord_flip() + theme(aspect.ratio=240/640)
nj
jj
levels(nj$Set) <- list(`TS`="tem", `Lab`="umi", `Online`="onl")
nj
levels(jj$Set) <- list(`TS`="tem", `Lab`="umi", `Online`="onl")
nj <- aov(N ~ Set, jj)
njtk <- glht(nj, linfct=mcp(Set='Tukey'))
njci <- confint(njtk)
ggplot(njci, aes(lhs, estimate)) + geom_linerange(aes(ymin = lwr, ymax=upr), data=njci) + geom_point(aes(size=p), data=summary(njtk)) + geom_point(shape=4, size=6) + geom_errorbar(aes(ymin=lwr, ymax=upr), width=0.25, data=njci) + scale_size(trans="reverse") + geom_hline(linetype="dashed") +  theme_bw() + xlab("Data Sets") + ylab("Estimated mean difference") +
theme(plot.title=element_text(face="bold", size=14), panel.grid.major=element_blank(), panel.grid.minor=element_blank()) + ggtitle('Multiple comparisons of mean distinct associates') + coord_flip() + theme(aspect.ratio=240/640)
jj
cor(jj)
jj %>% spread(Set, N)
jj %>% spread(Set, N) %>% select(-Cue) %>% corr
jj %>% spread(Set, N) %>% %>% corr
gg <- jj %>% spread(Set, N)
gg
cor
gg
gg %>% select(TS, Lab, Online) %>% corr
tio,2
top.2
gg
corr(select(gg, TS, Lab, Online))
corr(select(gg, TS, Lab))
corr(select(gg, TS, Online))
top.2 <- get_top_frequencies(frequencies, 2) %>% select(tem, umi, onl)
top.2
ko <- gg %>% select(TS, Lab, Online)
ko
cor(ko)
.19+.32+29
29.51/23
29.51/2
29.51/3
.19+.32+.29
0.8.3
0.8/3
oko <- cor(ko)
maxlim = 1.0
pd = position_dodge(0.15)
oko
oko[1]
oko[1,1]
oko[2,1]
c(oko[2,1], oko[2,3])
c(oko[2,1], oko[2,3], oko[3,1])
mean(c(oko[2,1], oko[2,3], oko[3,1]))
sd(c(oko[2,1], oko[2,3], oko[3,1]))
rs <_ c(oko[2,1], oko[2,3], oko[3,1])
rs <- c(oko[2,1], oko[2,3], oko[3,1])
t.test(rs)
t.test(rs) %>% summary
t.test(rs)
nj
nj%>% summary
njtk
njtk %>% summary
t.test(rs) %>% summary
t.test(rs)
install.packages(stringdist)
install.packages('stringdist')
frequencies
frequencies <- tbl_df(frequencies)
library(dplyr)
frequencies <- tbl_df(frequencies)
frequencies
frequencies
frequencies <- tbl_df(read.delim('../data/freq_new.txt', stringsAsFactors = TRUE, fileEncoding="UTF-8"))
library(tidyr)
library(dplyr)
frequencies <- tbl_df(read.delim('../data/freq_new.txt', stringsAsFactors = TRUE, fileEncoding="UTF-8"))
setwd("~/code/serca/web")
frequencies <- tbl_df(read.delim('../data/freq_new.txt', stringsAsFactors = TRUE, fileEncoding="UTF-8"))
f <- frequencies
f
library(stringdist)
f %>% filter(Assoc=='vatan')
f %>% filter(Cue=='asker')
asker <- f %>% filter(Cue=='asker')
asker$Assoc
stringdist(asker$Assoc)
stringdistmatrix(asker$Assoc)
asker$Assoc
asker$Assoc %>% toString
asker$Assoc
stringdistmatrix(asker$Assoc)
h <- stringdistmatrix(asker$Assoc)
h
head(h)
colnames(h)
h
stringdistmatrix(c('foo, bar, boo"))
)
)
)"
'
'
'
stringdistmatrix(c('foo, bar, boo'))
stringdistmatrix(c('foo', 'bar', 'boo'))
stringdistmatrix(c('foo', 'bar', 'boo'), method = 'lcs')
stringdistmatrix(c('foo', 'bar', 'boo'), method = 'lcs', useNames = TRUE)
stringdistmatrix(c('foo', 'bar', 'boo'), method = 'lcs', useNames = TRUE)
stringdistmatrix(asker, method = 'lcs', useNames = TRUE)
stringdistmatrix(asker$Assoc, method = 'lcs', useNames = TRUE)
h <- stringdistmatrix(asker$Assoc, method = 'lcs', useNames = TRUE)
colnames(h)
rownames(h)
h[1]
h[1,2]
h[1,1]
h[1]
h[4]
h[1:10]
h[1:100]
h[1:100000]
h[1:100]
h[2:100]
h
class(h)
h <- stringdistmatrix(asker$Assoc, asker$Assoc, method = 'lcs', useNames = TRUE)
h
class(h)
g <- as.data.frame.matrix(h)
g
asker %>% filter(n > 1)
asker %>% filter(n > 2)
asker %>% filter(n > 2) %>% stringdistmatrix
asker %>% filter(n > 2) %>% stringdistmatrix(useNames = TRUE)
asker %>% filter(n > 2) %$% Assoc
library(maggrittr)
library(maggritr)
library(magrittr)
asker %>% filter(n > 2) %$% Assoc
asker %>% filter(n > 2) %$% Assoc %>% stringdistmatrix()
asker %>% filter(n > 2) %$% Assoc %>% stringdistmatrix(useNames = TRUE
)
stringdist("asker", "askerlik")
stringdist("asker", "askerlik", method="lcs")
stringdist("asker", "askerlikler", method="lcs")
stringdist("asker", "askerlikler", method="lcs", weight = c(d=1, i=1, s=1, t=1))
stringdist("asker", "askerlikler", method="osa", weight = c(d=1, i=1, s=1, t=1))
stringdist("asker", "askerlikler", method="osa", weight = c(d=1, i=1, s=0, t=0))
stringdist("asker", "askerlikler", method="osa", weight = c(d=0.5, i=0.5, s=0, t=0))
stringdist("asker", "askerlikler", weight= c(d=0.5, i=0.5, s=0, t=0))
stringdist("asker", "askerlikler", weight= c(d=1, i=1, s=0, t=0))
stringdist("asker", "askerlikler", weight= c(d=1, i=1, s=100, t=100))
stringdist("asker", "askerlikler", weight= c(d=0.1, i=0.1, s=1, t=1))
stringdist(c("asker", "askerlikler"), weight= c(d=0.1, i=0.1, s=1, t=1))
stringdist("asker", "askerlikler", weight= c(d=0.1, i=0.1, s=1, t=1))
stringdist("asker", "allir", weight= c(d=0.1, i=0.1, s=1, t=1))
stringdist("asker", "allire", weight= c(d=0.1, i=0.1, s=1, t=1))
stringdist("asker", "allire", weight= c(d=0.1, i=0.1, s=0.1, t=0.1))
stringdist("asker", "allire", weight= c(d=1, i=0.1, s=0.1, t=0.1))
stringdist("asker", "allire", weight= c(d=1, i=1, s=0.1, t=0.1))
stringdist("asker", "allire", method="lcs")
stringdist("asker", "allire", method="qgram")
stringdist("asker", "allire", method="cosine")
stringdist("asker", "allire", method="osa")
stringdist("asker", "allire", method = 'jw', p=0)
stringdist("asker", "allire", method = 'jw', p=0.1)
stringdist("asker", "askerlik", method = 'jw', p=0.1)
stringdist("asker", "askerlikler", method = 'jw', p=0.1)
asker
stringdistmatrix(asker$Assoc)
e <- stringdistmatrix(asker$Assoc)
len(e)
dim(e)
sqrt(6670)
len(asker$Assoc)
length(asker$Assoc)
82+116
116-82
unique(asker$Assoc)
tt <- unique(asker$Assoc)
length(tt)
e <- stringdistmatrix(tt, useNames = TRUE)
e <- stringdistmatrix(tt, useNames = TRUE, method = 'jw')
e
class(e)
e['resmi']
e[['resmi']]
as.data.frame(e)
as.data.frame.matrix(e)
e <- stringdistmatrix(tt, tt, useNames = TRUE, method = 'jw')
tt
e
e <- stringdistmatrix(tt, tt, useNames = TRUE, method = 'jw') %>% as.data.frame.matrix
e
e$yeşil
colnames(e)
e$yeşil
e$yeşil <.05
e$yeşil <.5
e$yeşil <.5 %>% which
which(e$yeşil <.5)
rownames(e)[which(e$yeşil <.5)]
rownames(e)[which(e$yeşil <.2)]
rownames(e)[which(e$yeşil <.3)]
rownames(e)[which(e$yeşil <.4)]
rownames(e)[which(e$yeşil <.5)]
rownames(e)[which(e$yeşil <..45)]
rownames(e)[which(e$yeşil <.45)]
stringdist('yesillik', 'yesil', method='jw')
bee <- read.table('data/merge2.txt')
bee <- read.table('../data/merge2.txt', sep=')
bee <- read.table('../data/merge2.txt', sep=')
bee <- read.table('../data/merge2.txt', sep='\t')
bee
bee <- read.table('../data/merge2.txt', sep='\t', header = TRUE) %>% tbl_df
be
bee
bee %>% group_by(Target) %>% summarise(n=n())
bee %>% group_by(Target)
bee <- bee %>% group_by(Target) %>% mutate(rnr=n/Root.n)
bee
f
f %>% group_by(Cue, Assoc) %>% summarise(n=sum(n))
f %>% group_by(Cue, Assoc) %>% summarise(n=sum(n))
tt <- f %>% group_by(Cue, Assoc) %>% summarise(n=sum(n))
tt
tt <- tt %>% filter(Assoc != '?')
tt
tt %>% group_by(Cue) %>% stringdistmatrix(Assoc)
tt %>% group_by(Cue) %>% stringdistmatrix(Assoc, useNames = TRUE)
tt %>% group_by(Cue) %$% stringdistmatrix(Assoc, useNames = TRUE)
tt
bee
bee <- rename(Cue=Target)
bee <-  bee %>%  rename(Cue=Target)
bee
tt
tt %>% filter('Cue' =='asker')
tt %>% ungroup() filter('Cue' =='asker')
tt %>% ungroup() %>% filter('Cue' =='asker')
tt %>% ungroup() %>% filter('Assoc' =='asker')
tt
tt %>% ungroup() %>% filter('Cue' =='asker')
tt %>% filter('Cue' =='asker')
tt %>% filter(Cue =='asker')
bee
bee <- bee %>% select(Cue, Assoc)
bee
tt
bee %>% semi_join(tt)
bee
str(bee)
bee %>% semi_join(tt)
bee %>% semi_join(ungroup(tt))
bee
bee <- ungroup(bee)
bee
tt
tt %>% ungroup(tt)
tt <- ungroup(tt)
bee
bee %>% semi_join(tt)
bee
bee %>% semi_join(tt)
bee %>% left_join(tt, by = c('Cue', 'Assoc'))
m <- bee %>% left_join(tt, by = c('Cue', 'Assoc'))
bee
bee
m
bee
bee <- read.table('../data/merge2.txt', sep='\t', header = TRUE) %>% tbl_df
m
bee
bee <- bee  %>% rename(Cue=Target)
m
bee
bee <- bee %>% select(Cue, Assoc, Root.n)
bee
bee %>% left_join(tt, by = c('Cue', 'Assoc'))
bee <- bee %>% left_join(tt, by = c('Cue', 'Assoc'))
bee
bee <- read.table('../data/merge2.txt', sep='\t', header = TRUE) %>% tbl_df
bee <- bee %>% select(Cue=Target, Assoc, Root, Root.n)
bee <- bee %>% left_join(tt, by = c('Cue', 'Assoc'))
bee
bee %>% group_by(Cue) %>% mutate(ntor = n/Root.n)
bee <- bee %>% group_by(Cue) %>% mutate(ntor = n/Root.n)
bee <- bee %>% filter(ntor!=1)
bee
bee <- bee %>% filter(Assoc != Root)
bee
bee <- bee %>% group_by(Cue) %>% mutate(jw=stringsim(Assoc, Root, method="jw"))
bee
bee %>% filter(jw>0.5)
bee <- bee %>% filter(jw>0.5)
1/6
1/0.13
0.875*2
bee <- bee %>% mutate(jn=jw/ntor)
bee
bee %>% filter(jn > 1)
bee
0.13*6
0.3*0.8
bee <- bee %>% mutate(jk=jw*ntor)
bee <- bee %>% mutate(jf=jw*log(ntor))
bee
bee <- bee %>% mutate(jf=jw*log10(ntor))
bee
bee %>% filter(jn>0.5)
ae <- bee %>% filter(jn>0.5)
write.table(ae, quote = FALSE, fileEncoding = 'UTF-8', sep = '\t', file = '../data/merge3.txt')
library(compositions)
?compositions
acomp
f
f %>% group_by(Cue) %>% filter(Label=='TS')
tses <- f %>% group_by(Cue) %>% filter(Label=='TS')
tses %>% group_by(Cue) %>% select(Cue, Label, Assoc, n, Probability, Rank)
tses <- tses %>% group_by(Cue) %>% select(Cue, Label, Assoc, n, Probability, Rank)
install.packages(c("car", "dplyr", "estimability", "evaluate", "httpuv", "knitr", "lme4", "lsmeans", "MatrixModels", "mime", "nlme", "psych", "quantreg", "R6", "RcppArmadillo", "ReporteRs", "rmarkdown", "scales", "sgeostat", "shiny", "SparseM", "TSP"))
f
library(dplyr)
tses
eg <- tses %>% group_by(Cue) %>% left_join(f, by = c('Cue', 'Assoc'))
eg
?left_join
eg <- tses %>% group_by(Cue) %>% left_join(f,  by = c('Cue', 'Assoc'))
eg
f %>% group_by(Cue) %>% distinct(Assoc)
f %>% group_by(Cue) %>% distinct(Assoc) %>% select(Assoc)
assocs <- f %>% group_by(Cue) %>% distinct(Assoc) %>% select(Assoc)
assocs
assocs %>% group_by(Cue) %>% left_join(tses)
assocs %>% group_by(Cue) %>% left_join(tses) %>% filter(!is.na(Label))
tses
assocs %>% group_by(Cue) %>% left_join(tses) %>% filter(!is.na(Label))
assocs %>% group_by(Cue) %>% left_join(tses)
assocs %>% group_by(Cue) %>% left_join(tses) %>% spread(Label, n)
library(tidyr)
assocs %>% group_by(Cue) %>% left_join(tses) %>% spread(Label, n)
?spread
assocs %>% group_by(Cue) %>% left_join(tses)
assocs
head(assocs)
assocs[1:10]
assocs[2]
assocs[2:3]
assocs[2]
assocs[4]
assocs[3]
assocs[1]
assocs[1,]
assocs[1,10]
assocs[1,2]
assocs[1,4]
assocs[1,2,]
assocs[1,2,4,]
assocs[1,2,1,]]
assocs
le <- assocs %>% group_by(Cue) %>% spread()
le <- assocs %>% group_by(Cue) %>% mutate(Set=NA) %>% spread(-Set)
asker
le <- assocs %>% group_by(Cue) %>% filter(Cue=='asker')
le
le %>% spread()
le %>% mutate(Set=NA)
le <- le %>% mutate(Set=NA)
le %>% spread(Cue, Assoc)
le %>% spread(Set, Assoc)
le %>% spread(Cue, Assoc, -Set)
le %>% spread(Assoc, -Set)
le %>% spread(Assoc, -Set, -Cue)
?data.frame
data.frame(x=1)
data.frame(c('a', 'b'))
data.frame(a, b, c)
data.frame('a', 'b', 'c')
data.frame('a', 'b', 'c', row.names = FALSE, check.names = FALSE)
eses
tses
tses %>% filter(Cue=='asker')
tses %>% filter(Cue=='asker') %>% select(Cue, Label, Assoc, Probability)
tses %>% filter(Cue=='asker') %>% select(Cue, Label, Assoc, Probability) %>% spread(Assoc, Probability)
f
f %>% group_by(Cue) %>% select(Cue, Label, Probability)
f %>% group_by(Cue) %>% select(Label, Cue, Assoc, Probability)
?spread
f %>% group_by(Cue) %>% select(Label, Cue, Assoc, Probability) %>% spread(c("Label", "Cue"), Probability)
f %>% group_by(Cue) %>% select(Label, Cue, Assoc, Probability) %>% spread(c(Label, Cue), Probability)
f %>% group_by(Cue) %>% select(Label, Cue, Assoc, Probability) %>% spread(Cue, Probability)
f %>% group_by(Cue) %>% select(Label, Cue, Assoc, Probability) %>% spread(c(.Cue.), Probability)
f %>% group_by(Cue) %>% select(Label, Cue, Assoc, Probability) %>% spread(c(.Cue), Probability)
f %>% group_by(Cue) %>% select(Label, Cue, Assoc, Probability) %>% spread(c(`Cue`), Probability)
f %>% group_by(Cue) %>% select(Label, Cue, Assoc, Probability) %>% spread(Label:Cue, Probability)
f %>% group_by(Cue) %>% select(Label, Cue, Assoc, Probability) %>% spread(Cue, Probability)
f %>% group_by(Cue, Label) %>% select(Label, Cue, Assoc, Probability) %>% spread(Cue, Probability)
f %>% group_by(Cue, Label) %>% select(Label, Cue, Assoc, Probability)
f %>% group_by(Cue, Label) %>% select(Label, Cue, Assoc, Probability) %>% spread(Assoc, Probability)
f %>% group_by(Cue, Label) %>% select(Label, Cue, Assoc, Probability) %>% group_by(Cue, Label) %>% spread(Assoc, Probability)
f %>% group_by(Cue, Label) %>% select(Label, Cue, Assoc, Probability) %>% group_by(Label) %>% spread(Assoc, Probability)
f %>% group_by(Cue, Label) %>% select(Label, Cue, Assoc, Probability)
assocs
assocs
assocs %>% group_by(Cue) %>% select(Assoc)
assocs %>% group_by(Cue) %>% distinct(Assoc)
assocs %>% group_by(Cue) %>% distinct(Assoc) %$% Assoc
library(magrittr)
assocs %>% group_by(Cue) %>% distinct(Assoc) %$% Assoc
assocs %>% group_by(Cue) %>% distinct(Assoc)
assocs %>% group_by(Cue) %>% distinct(Assoc)
assocs %>% group_by(Cue) %>% distinct(Assoc) %>% nrows()
assocs %>% group_by(Cue) %>% distinct(Assoc) %>% nrows
assocs %>% group_by(Cue) %>% distinct(Assoc) %>% nrow
assocs %>% group_by(Cue) %>% distinct(Assoc) %>% summarise(n=nrow())
assocs %>% group_by(Cue) %>% distinct(Assoc) %>% summarise(n=n())
assocs %>% group_by(Cue)
assocs %>% group_by(Cue) %>% left_join((f %>% filter(Label=='Online')))
assocs %>% group_by(Cue) %>% left_join((f %>% filter(Label=='Online') %>% select(Label, Cue, Assoc, n, Probability )))
ej <- assocs %>% group_by(Cue) %>% left_join((f %>% filter(Label=='Online') %>% select(Label, Cue, Assoc, n, Probability )))
ej <- assocs %>% group_by(Cue) %>% left_join((f  %>% select(Label, Cue, Assoc, n, Probability )))
ej
View(ej)
?left_join
ej <- assocs %>% group_by(Cue) %>% left_join((f  %>% select(Label, Cue, Assoc, n, Probability )), by=c('Cue', 'Assoc'))
ej %>% filter('Cue'=='asker')
ej %>% filter(Cue=='asker')
View(ej %>% filter(Cue=='asker'))
asker <- ej %>% filter(Cue=='asker')
asker
asker %>% spread(Assoc, Probability)
ej
ej %>% select(-n) %>% group_by(Cue) %>% spread(Assoc, Probability)
ej %>% select(-n) %>% group_by(Cue) %>% spread(Assoc, Probability, drop = FALSE)
ej %>% select(-n) %>% group_by(Cue) %>% spread(Assoc, Probability, drop = FALSE)
ej %>% select(-n) %>% group_by(Cue) %>% spread(Assoc, Probability, drop = FALSE)
ej
ej[3478]
ej[347]
ej[,347]
ej[1,347]
ej[1,347,]
ej
ej[1]
ej[1][1]
ej[1,1]
ej[1,2]
ej[1,347]
ej[1,1]
ej[2,1]
ej[347,1]
ej %>% select(-n) %>% group_by(Cue) %>% spread(Assoc, Probability, drop = FALSE)
ej[3478,1]
ej[3479,1]
ej[3479,]
ej[3478,]
frequencies <- tbl_df(read.delim('../data/frequencies.txt', stringsAsFactors = TRUE, fileEncoding="UTF-8"))
f <- frequencies
f
f %>% select(Label, Target, Assoc, Probability) %>% group_by(Target) %>% spread(Assoc, Probability)
f %>% select(Label, Target, Assoc, Probability) %>% group_by(Target) %>% spread(Assoc, Probability, drop = FALSE)
ej <- f %>% select(Label, Target, Assoc, Probability) %>% group_by(Target) %>% spread(Assoc, Probability, drop = FALSE)
ej %>% filter(Assoc=='asker')
ej %>% filter(Target=='asker')
