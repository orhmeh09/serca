setsizes[[1]
]
setsizes[[1]]
class(setsizes[[1]])
class(setsizes[1])
setsizes <- sapply(frequencies, get_asetsizes)
setsizes <- sapply(frequencies, get_asetsizes, simplify = FALSE)
setsizes
class(setsizes)
class(setsizes[1])
class(setsizes[[1]])
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
traceback()
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
tracebac()
traceback()
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
frequencies
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
f <- fread(path, stringsAsFactors = FALSE)
debugSource('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
source('~/code/serca/serca.R')
setsizes$tek
source('~/code/serca/serca.R')
setsizes <- lapply(frequencies, get_asetsizes)
frequencies.meta[['Label']=='onl']
## Online (onl)
- Origin: Collected online via SurveyMonkey in spring 2015
- No. valid response sets: `r frequencies$n.subjects`
summary(frequencies.meta)
summary(frequencies)
frequencies.meta
s <- lapply(frequencies, idio)
s
s <- lapply(frequencies, function(x) { nrow(idio(x)) })
s
s <- lapply(frequencies, function(x) { length(idio(x)) })
s
s
s <- lapply(frequencies, function(x) { nrow(idio(x)) })
s
setsizes
setsizes[1]
mean(setsizes[1]$setsize)
mean(setsizes)
mean(setsizes[1]
)
mean(setsizes$tek$setsize)
lapply(setsizes, function(x){mean(x$setsize)})
lapply(setsizes, function(x){round(mean(x$setsize), 3})
lapply(setsizes, function(x){round(mean(x$setsize), 3)})
lapply(setsizes, function(x){round(mean(x$setsize), 2)})
mean_setsizes
mean_setsizes <- lapply(setsizes, function(x){round(mean(x$setsize), 2)})
mean_setsizes
mean_setsizes['onl']
setsizes$tek
mean(setsizes$tek)
mean(setsizes$tek$setsize)
View(frequencies.meta)
View(frequencies.meta)
frequencies.meta <- frequencies.meta %>% mutate(MeanSetSize = nrow(setsizes[Label]))
frequencies.meta %>% mutate(MeanSetSize = length(setsizes[Label]))
frequencies.meta %>% mutate(MeanSetSize = length(setsizes[Label]$setsize))
frequencies.meta %>% mutate(MeanSetSize = mean(setsizes[Label]$setsize))
frequencies.meta %>% mutate(MeanSetSize = mean(setsizes[Label]['setsize']))
setsizes['onl']
setsizes['onl']['setsize']
setsizes['onl']$setsize
setsizes['onl']
frequencies.meta %>% mutate(MeanSetSize = mean(setsizes[Label]['setsize']))
frequencies.meta %>% mutate(MeanSetSize = mean(setsizes[Label]$setsize)
)
frequencies.meta %>% mutate(MeanSetSize = mean(setsizes[Label])
)
setsizes$tek
setsizes$tek$setsize
mean(setsizes$tek$setsize)
mean(setsizes['tek']$setsize)
mean(setsizes[['tek'$setsize)
mean(setsizes[['tek']]$setsize)
setsizes <- lapply(frequencies, get_setsizes)
setsizes[['tek']]
setsizes[['tek']]$setsize
#frequencies.meta <- frequencies.meta %>% mutate(MedianSetSize = round(median(setsizes[[Label]]$setsize), 2))
frequencies.meta$Label
setsizes
setsizes$tek
frequencies
tem <- semi_join(frequencies$tek, frequencies$umi, by='Target')
tem
tem <- select(tem, Target, Assoc, n) %>% arrange(Target, Assoc, n)
write.table(tem, file="data/frequencies/tem.txt", quote=FALSE, sep="\t", fileEncoding="UTF-8")
write.table(tem, file="data/frequencies/tem.txt", quote=FALSE, sep="\t", fileEncoding="UTF-8", append = FALSE)
getcwd()
getwd()
write.table(tem, file="data/frequency/tem.txt", quote=FALSE, sep="\t", fileEncoding="UTF-8", append = FALSE)
requencies.meta %>% mutate(MeanSetSize = mean(setsizes[Label]$setsize))
frequencies.meta %>% mutate(MeanSetSize = mean(setsizes[Label]$setsize))
frequencies.meta %>% mutate(MeanSetSize = mean(ss[Label]$setsize))
requencies.meta %>% mutate(MeanSetSize = mean(setsizes[Label]$setsize))
frequencies.meta$frequencies <- frequencies
frequencies.meta$frequencies <- frequencies
f
ss
source('~/code/serca/serca.R')
---
)
label <-filter(fmeta, row_number() == i)$Label
label <- filter(fmeta, row_number() == i)
help(iter)
library(foreach)
help(iter)
foreach(i=iter(fmeta, by='column')) %do% {
foreach(i=iter(fmeta, by='column')) %do% {
iter
library(foreach)
iter
library(foreach)
library(iterators)
setsizes
foreach(x=iter(fmeta, by='row')) %do% {
)
}
source("overview.Rmd")
source("overview.Rmd")
source("overview.Rmd")
source("overview.Rmd")
library("rmarkdown")
rmarkdown::render("overview.Rmd")
setsizes
t <- get_setsizes(freqs$tem)
t
t <- get_setsizes(freqs$tem) %>% mutate(Label="tem")
t
ss <- Reduce(get_setsizes, freqs, tbl_df())
ss <- Reduce(get_setsizes, freqs, tbl_df(data = NULL))
ss <- Reduce(get_setsizes, freqs, tbl_df([]))
ss <- Reduce(get_setsizes, freqs, tbl_df(c()))
ss <- Reduce(get_setsizes, freqs, tbl_df(c(,)))
ss <- Reduce(get_setsizes, freqs, data.frame())
ss <- Reduce(function(init, x){ full_join(init, mutate(get_setsizes(freqs[i], Label=freqs[i]$Label, , 1:length(freqs), data.frame())
)
)
)
freqs[0]
freqs[[0]]
freqs[1]
freqs[1]$tem
getwd(
)
help(summarise)
library(dplyr)
help(summarise)
unique(select(fmeta, Label))
foreach(x=iter(nique(select(fmeta, Label))
)
)
library(foreach)
library(iterators)
foreach(x=iter(unique(select(fmeta, Label)))) %do% (x)
foreach(x=iter(unique(select(fmeta, Label)))) %do% (x$Label)
foreach(x=iter(sapply(unique(select(fmeta, Label))), function(x){x[['Label']]}) %do% (x$Label)
)
sapply(unique(select(fmeta, Label)))
sapply(unique(select(fmeta, Label)), function(x){x$Label}
)
lapply(unique(select(fmeta, Label)), function(x){x$Label}
)
lapply(unique(select(fmeta, Label)), function(x){x$Label})
vapply(unique(select(fmeta, Label)), function(x){x$Label})
tapply(unique(select(fmeta, Label)), function(x){x$Label})
apply(unique(select(fmeta, Label)), function(x){x$Label})
lapply(unique(select(fmeta, Label)), function(x){x$Label})
lapply(unique(select(fmeta, Label)), message)
select(fmeta, Label)
unique(select(fmeta, Label))
s <- unique(select(fmeta, Label))
lappy(s, message)
lapp;y(s, message)
lapply(s, message)
lapply(s)
lapply(s, 1)
lapply(s, sqrt)
lapply(s, print)
lapply(s, function(x){x[['Label']]})
lapply(s, function(x){x['Label']})
lapply(s, function(x){x[['Label']})
lapply(s, function(x){x[['Label']])
lapply(s, function(x){x[['Label']]))
lapply(s, function(x){x[['Label']]})
apply(s, function(x){x[['Label']]})
sapply(s, function(x){x[['Label']]})
vapply(s, function(x){x[['Label']]})
apply(s, function(x){x[['Label']]})
apply(s, function(x){x})
lapply(s, function(x){x})
s[1]
s[2]
s[,1]
s[1รถ]
s[1รถ]
s[1,]
as.list(s)
as.list(s)[1]
as.list(s)
as.list(s)[,1]
as.list(s)[1,]
as.list(s)[1]
as.list.data.frame(s)
s
foeach(x=iter(s, by='row')) %do% message(x)
foreach(x=iter(s, by='row')) %do% message(x)
foreach(x=iter()) %do% message(x)
foreach(x=iter(x)) %do% message(x)
foreach(x=iter(s)) %do% message(x)
foreach(x=iter(s, by = 'col')) %do% message(x)
foreach(x=iter(s, by = 'row')) %do% message(x)
s
s[1]
s[,1]
s[1,1]
s[1,2]
s[2,1]
s[3,1]
foreach(x=iter(s, by = 'col')) %do% message(x$Label)
foreach(x=iter(s, by = 'row')) %do% message(x$Label)
foreach(x=iter(s, by = 'row')) %do% message(x)
foreach(x=iter(s, by = 'row')) %do% message(class(x))
foreach(x=iter(s, by = 'row')) %do% message(class(x$Label))
labels
s
as.vector(s)
as.vector(s)
v <- as.vector(s)
class(v)
v <- as.vector(s[1])
v
class(v)
v <- as.vector(s[,1])
v
class(v)
s$Label
class(s$Label
)
v
v <- s$Label
lapply(v, message)
vapply(v, message)
v <- as.list(s$Label)
v
class(v)
class(v[1])
class(v[[1])
class(v[[1])
v[1]
v[[1]]
foreach(x=iter(v)) %do% message(x)
foreach(x=iter(v)) %do% x
traceback()
library(rmarkdown)
rmarkdown::run("overview.Rmd")
traceback()
labels = unique(select(fmeta, Label))$Label
# Load frequency tables
frequencies <- foreach(x = iter(fmeta, by='row'),
.combine = full_join,
.init = tbl_df(data.frame())
) %do% {
load_frequencies(x$FrequencyPath) %>% mutate(Label = x$Label)
}
# Calculate set sizes
setsizes <- foreach(x=iter(labels, 'row'),
)
source('~/.active-rstudio-document', echo=TRUE)
help(foreach)
.init = frequencies,
.init = frequencies,
}
load_frequencies(x$FrequencyPath) %>% mutate(Label = x$Label)
.init = setsizes,
.combine = function(x, rest){full_join(x, rest)},
.combine = function(x, rest){full_join(x, rest)},
#                    .combine = function(x, rest){full_join(x, rest)},
.init = setsizes,
setsizes <- foreach( x= iter(labels, by='row'),
.combine = function(x, rest){full_join(x, rest)},
.init = setsizes,
fmeta
fmeta
frequencies %>% select(Label == x) %>%
nonidio() %>% nonq() %>% group_by(Target) %>% summarise(SetSize=n())
}
library(magrittr)
idio <- function(t) {
t %>% filter(n == 1)
}
nonidio <- function(t) {
t %>% filter(n > 1)
}
nonq <- function(t) {
t %>% filter(Assoc != '?')
}
# Load metadata
fmeta <- tbl_df(read.delim('data/meta.txt', stringsAsFactors = FALSE, fileEncoding = "UTF-8"))
labels = unique(select(fmeta, Label))
# Load frequency tables
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
.init = frequencies
) %do% {
f <- tbl_df(read.delim(x$FrequencyPath, stringsAsFactors = FALSE, fileEncoding="UTF-8"))
f <- f %>% arrange(Target, desc(n), Assoc)
f <- f %>% group_by(Target, Assoc) %>%
mutate(Label = x$Label,
Rank = dense_rank(desc(n)),
RankMax=rank(n, ties.method = "max"),
Probability=round((1/(sum(n)/n)), 3))
f
source('~/.active-rstudio-document', echo=TRUE)
help(rbind)
source('~/.active-rstudio-document', echo=TRUE)
help(rbind)
source('~/.active-rstudio-document', echo=TRUE)
setsizes
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
filter(setsizes, Label=='onl')
warnings()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
traceback()
sd
source('~/.active-rstudio-document', echo=TRUE)
class(setsizes)
setsizes %>% filter(Label=='onl')
setsizes %>% filter(Label=='onl') %>% summarise(round(mean(SetSize), 2))
MeanSetSizes <- foreach(x = iter(fmeta, by='row')) %do%
setsizes %>% filter(Label == x$Label) %>% summarise(round(mean(SetSize), 2))
MeanSetSizes <- foreach(x = iter(fmeta, by='row')) %do% {
setsizes %>% filter(Label == x$Label) %>% summarise(round(mean(SetSize), 2))
}
source('~/.active-rstudio-document', echo=TRUE)
setsizes
frequencies
frequencies
frequenceis %>% group_by(Label, Target, Assoc)
frequencies %>% group_by(Label, Target, Assoc)
frequencies %>% group_by(Label, Target, Assoc) %>% mutate(Rank = dense_rank(-n))
)
frequencies %>% group_by(Label, Target, Assoc) %>% mutate(Rank = dense_rank(-n))
frequencies %>% group_by(Label, Target) %>% mutate(Rank = dense_rank(-n))
frequencies
source('~/.active-rstudio-document', echo=TRUE)
frequencies
setsizes
setsizes %>% group_by(Target)
library(tidyr)
spread(setsizes, Label)
spread(setsizes, Label)
spread(setsizes, SetSize, Label)
spread(setsizes, Label, SetSize)
select(frequencies, Label=="onl", Target=="asker", n > 1)
frequencies %>% select(Label=="onl", Target=="asker", n > 1)
frequencies %>% filter(Label=="onl", Target=="asker", n > 1)
frequencies %>% filter(Label=="onl", Target=="asker", n > 1) %>% top_n(n)
frequencies %>% filter(Label=="onl", Target=="asker", n > 1) %>% top_n(n, n = 3)
frequencies %>% filter(Label=="onl", Target=="asker", n > 1) %>% top_n(n, n = 100)
frequencies %>% filter(Label=="onl", Target=="asker", n > 1) %>% top_n(n, n = 100000)
frequencies %>% filter(Label=="onl", Target=="asker", n > 1) %>% top_n(n, n = 3)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
lbl
ls(lbl)
lbl$i
lbl$obj
lbl$obj$Label
lbl$obj$Target
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ss
filter(frequencies, Label=='onl')
filter(frequencies, Label=='onl', Target=='asker')
filter(frequencies, Label=='onl', Target=='asker', n > 1)
filter(frequencies, Label=='onl', Target=='asker', n > 1) %>% top_n(n, n = 3)
filter(frequencies, Label=='onl', Target=='asker', n > 1) %>% top_n(n, 3)
filter(frequencies, Label=='onl', Target=='asker', n > 1) %>% top_n(n, n = 3)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
filter(frequencies, Label=='onl', Target=='asker', n > 1) %>% top_n(n, n = 3)
m
26/3
26/4
26/7
26/2
26/3
26/4
26/5
26/6
26/7
26/9
26/13
targets
select(frequencies, Target)
select(setsizes, Target)
source('~/.active-rstudio-document', echo=TRUE)
select(setsizes, Target)
targets
source('~/.active-rstudio-document', echo=TRUE)
ttables
ttables[1]
source('~/.active-rstudio-document', echo=TRUE)
ttabkes
ttablesp1
ttables[1]
kable(ttables[[1]])
kable(ttables[1])
ttables[1]
kable(ttables[1], col.names = colnames(ttables[1]))
colnames(ttables[1]))
colnames(ttables[1])
colnames(ttables[[1]]
)
colnames(ttables)
ttables
ttables[1,1]
ttables[[1]]
source('~/.active-rstudio-document', echo=TRUE)
ttables[1]
colnames(ttables[1])
colnames(ttables[[1])
colnames(ttables[[1])
colnames(ttables[[1]])
colnames(ttables[[[1]])
colnames(ttables[[[1]]])
colnames(ttables[1,1]
)
colnames(ttables[1,0)]
colnames(ttables[1,)]
colnames(ttables[1,]]
colnames(ttables[1,]
)
ttables
ttables[[1]]
class(ttables[[1]])
z <- unlist(ttables)
z
z <- unlist(ttables, recursive = F)
z
ttables <- unlist(ttables)
ttables[1]
ttables[[1]]
ttables[[1]]
colnames(ttables)
source('~/.active-rstudio-document', echo=TRUE)
ttables[1]
colnames(ttables[1])
colnames(ttables[[1]])
lapply(kable, ttables)
lapply(ttables, kable)
source('~/.active-rstudio-document', echo=TRUE)
ttables[[1]]
ttables[[1]]$Target[[1]]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
kable(ttables)
lapply(ttables, kable)
lapply(ttables, function(x) {kable(x, caption=x$Target)})
lapply(ttables, function(x) {kable(x, caption=x$Target, format = 'html')})
lapply(ttables, function(x) {kable(x, caption=x$Target, format = 'markdown')})
lapply(ttables, function(x) {kable(x, caption=x$Target[1], format = 'markdown')})
lapply(ttables, function(x) {kable(x, caption='buu', format = 'markdown')})
lapply(ttables, function(x) {kable(x, caption='buu', format = 'html')})
lapply(ttables, function(x) {kable(x, caption=x$Target, format = 'html')})
source('~/.active-rstudio-document', echo=TRUE)
lapply(ttables, function(x) {kable(x, caption=x$Target, format='html')})
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ttables
ttables[1]
ttables[[1]]$Target
source('~/.active-rstudio-document', echo=TRUE)
for (i in 1:length(ttables)) {
print(kable(ttables[[i]], format = "html"))
}
